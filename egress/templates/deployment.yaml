apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "egress.fullname" . }}
  labels:
    {{- include "egress.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "egress.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "egress.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "egress.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.config.yaml.secret }}
      initContainers:
        - name: merge-secrets
          image: mikefarah/yq
          env:
            - name: EGRESS_CONFIG_BODY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "egress.fullname" . }}
                  key: config.yaml
            - name: EGRESS_SECRET_CONFIG
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.yaml.secret }}
                  key: {{ .Values.config.yaml.key }}
            - name: CONFIG_FILE_LOCATION
              value: {{ .Values.config.mount }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                echo "$EGRESS_CONFIG_BODY" > $CONFIG_FILE_LOCATION/body.yaml &&
                echo "$EGRESS_SECRET_CONFIG" > $CONFIG_FILE_LOCATION/secrets.yaml &&
                yq ea '. as $item ireduce ({}; . * $item )' $CONFIG_FILE_LOCATION/body.yaml $CONFIG_FILE_LOCATION/secrets.yaml > $CONFIG_FILE_LOCATION/config.yaml
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.config.yaml.secret }}
            - name: EGRESS_CONFIG_FILE
              value: {{ .Values.config.mount }}/config.yaml
          {{- else}}
            - name: EGRESS_CONFIG_BODY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "egress.fullname" . }}
                  key: config.yaml
          {{- end}}
          ports:
            {{- if .Values.egress.health_port }}
            - name: health
              containerPort: {{ .Values.egress.health_port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.egress.prometheus_port }}
            - name: metrics
              containerPort: {{ .Values.egress.prometheus_port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: health
          readinessProbe:
            httpGet:
              path: /
              port: health
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
